Interview Question – Node.js Coding Task

Create a Node.js script (rick-morty.js) that:

Requirements
1. Fetches characters from the Rick and Morty API (https://rickandmortyapi.com/api/character/?page=1)
  e.g. response:
  {
    `"info": {
      "count": 826,
      "pages": 42,
      "next": "https://rickandmortyapi.com/api/character/?page=2",
      "prev": null
    },
    "results": [
      {
        "id": 1,
        "name": "Rick Sanchez",
        "status": "Alive",
        "species": "Human",
        "type": "",
        "gender": "Male",
        "origin": {
          "name": "Earth (C-137)",
          "url": "https://rickandmortyapi.com/api/location/1"
        },
        "location": {
          "name": "Citadel of Ricks",
          "url": "https://rickandmortyapi.com/api/location/3"
        },
        "image": "https://rickandmortyapi.com/api/character/avatar/1.jpeg",
        "episode": [
          "https://rickandmortyapi.com/api/episode/1",
          ...
        ],
        "url": "https://rickandmortyapi.com/api/character/1",
        "created": "2017-11-04T18:48:46.250Z"
      },
      ... 19 more records
    ]`
  }
2. The api will return 20 result per request. Follow the pagination and make sure you get all data from the api.
3. Outputs a CSV or txt file named rick-morty-krom with the columns:
   id,name,email,status,species,gender,origin_name,location_name,episode_count
   - email = first name and last name separated by "." and ends with @krom.id
   - origin_name = origin.name
   - location_name = location.name
   - episode_count = number of episodes the character appears in
4. Log an origin summary to the console in JSON format:
   {
     "Earth (C-137)": {
       "alive_count": 100,
       "dead": 200,
       "unknown": 10,
       "alive_share": 0.323
     },
     ...
   }
   - alive_share = alive_count / total_count (rounded to 2–3 decimals)

Example CSV or txt Output
id,name,email,status,species,gender,origin_name,location_name,episode_count
1,Rick Gun Sanchez,rick.sanchez@krom.id,Alive,Human,Male,Earth (C-137),Earth (Replacement Dimension),51

look at ./output/example.csv for better understanding of the expected output.
for email: use the first and last name to create the email id

Example Summary Output
{
  "Earth": {
    "alive_count": 100,
    "dead": 200,
    "unknown": 10,
    "alive_share": 0.323
  }
}

Constraints:
- Must run via node rick-morty.js
- No external file-writing libraries required (optional to use)
- Use native Node.js features where possible
- You can use https://nodejs.org/docs/latest/api for help, but try to solve the problem yourself first
